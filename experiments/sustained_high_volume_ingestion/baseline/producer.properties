# list of brokers used for bootstrapping knowledge about the rest of the cluster
# format: host1:port1,host2:port2 ...
bootstrap.servers=192.168.1.1:9092,192.168.1.2:9092,192.168.1.3:9092

# specify the compression codec for all data generated: none, gzip, snappy, lz4, zstd
compression.type=none

# name of the partitioner class for partitioning records;
# The default uses "sticky" partitioning logic which spreads the load evenly between partitions, but improves throughput by attempting to fill the batches sent to each partition.
#partitioner.class=

# the maximum amount of time the client will wait for the response of a request
#request.timeout.ms=

# how long `KafkaProducer.send` and `KafkaProducer.partitionsFor` will block for
#max.block.ms=

# the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together
linger.ms=0

# the maximum size of a request in bytes
#max.request.size=

# the default batch size in bytes when batching multiple records sent to a partition
batch.size=65536

# the total bytes of memory the producer can use to buffer records waiting to be sent to the server
#buffer.memory=

# The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the durability of records that are sent.
acks=1

max.in.flight.requests.per.connection=5
enable.idempotence=false
